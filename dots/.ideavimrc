set number                        " line numbers

set hlsearch                      " highlight search occurrences
set ignorecase                    " ignore case in search patterns
set smartcase                     " no ignore case when pattern is uppercase
set incsearch                     " show search results while typing
set wrapscan                      " searches wrap around the end of the file

set gdefault                      " substitute all occurrences in line per default
set history=10000                 " keep x lines of command line history
set scrolloff=5 sidescrolloff=10  " keep some lines before and after the cursor visible
set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard

" https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
set multiple-cursors
set commentary
set surround                      " emulate vim-surround plugin
set ideajoin
set ideastatusicon=disabled

" set <leader> to <space>
let mapleader = " "

imap kj <ESC>

map <c-s-=> <Action>(ZoomInIdeAction)
map <c-s--> <Action>(ZoomOutIdeAction)

Plug 'preservim/nerdtree'
Plug 't-pope/surround'
Plug 't-pope/commentary'

"""" Window / Split Management ---------------
noremap <C-L> <C-W><C-L>
noremap <C-H> <C-W><C-H>
noremap <C-K> <C-W><C-K>
noremap <C-J> <C-W><C-J>
map <c-w> <Action>(CloseContent)

map gn <Action>(GotoNextError)
map gp <Action>(GotoPreviousError)

"""" REMEMBER
map gi <Action>(GotoImplementation)
map gI <Action>(QuickImplementations)

map gd <Action>(GotoDeclaration)
map gr <Action>(RenameElement)

map K <Action>(ShowIntentionActions)
map gs <Action>(ShowUsages)
map ga :action Refactorings.QuickListPopupAction<CR>
map gh <Action>(ShowHoverInfo)

map <leader>h :action CallHierarchy<CR>

map <leader>r <Action>(ReformatCode)

map <c-a-\> <Action>(SplitVertically)
map <c-a-/> <Action>(SplitHorizontally)
map <c-a-Left> <Action>(StretchSplitToLeft)
map <c-a-Right> <Action>(StretchSplitToRight)

map <c-a-x> <Action>(Unsplit)
map <c-a-z> <Action>(UnsplitAll)

map <c-a-m> :action MoveEditorToOppositeTabGroup<CR>
map <c-a-n> :action EditSourceInNewWindow<CR>

map <c-a-f> <Action>(GotoFile)
map <c-a-p> :action ShowSettings<CR>
map <c-a-o> :action editRunConfigurations<CR>

"""map <c-a-s> :action <CR>

map <c-a-1> :action ActivateDebugToolWindow<CR>
map <c-a-2> :action ActivateRunToolWindow<CR>
map <c-a-3> :action ActivatePythonConsoleToolWindow<CR>
map <c-a-4> :action ActivateSciViewToolWindow<CR>
map <c-a-5> :action ActivateStructureToolWindow<CR>

map <c-a-6> :action XDebugger.AttachToProcess<CR>
map <c-a-7> :action ActivateBookmarksToolWindow<CR>

map <c-a-q> :action HideAllWindows<CR>
map <c-a-w> :action HideActiveWindow<CR>
map <c-a-;> :action JumpToLastWindow<CR>


"""""""""""""""""""""""""""""""""""""""""""""
""" Movement --------------------------------
nnoremap \ :NERDTree<CR>

map n nzzzv
map N Nzzzv
map j jzz
map k kzz
map <C-d> <C-d>zz
map <C-u> <C-u>zz

vnoremap < <gv
vnoremap > >gv

map <leader>zo <Action>(ExpandAllRegions)
map <leader>zc <Action>(CollapseAllRegions)
map zo <Action>(ExpandRegion)
map zc <Action>(CollapseRegion)

vnoremap <C-j> <ESC>
map <C-d> <C-d>zz
map <C-u> <C-u>zz

map <S><CR> o<Esc>

""" Tabs ------------------------------------
map <C-1> 1gt
map <C-2> 2gt
map <C-3> 3gt
map <C-4> 4gt
map <C-5> 5gt
map <C-6> 6gt
map <C-7> 7gt

map <c-PageDown> <Action>(NextTab)<CR>
map <c-PageUp> <Action>(PreviousTab)<CR>

"""" Run/Debug --------------------------------
map ,r <Action>(Rerun)
map ,q <Action>(Stop)
map ,b <Action>(ToggleLineBreakpoint)
map ,n <Action>(MuteBreakpoints)

map ,a <Action>(ViewBreakpoints)
map ,s <Action>(StepOver)
map ,i <Action>(StepIntoMyCode)
map ,o <Action>(StepOut)
map ,c <Action>(Resume)
map ,d <Action>(Debug)

"""" Functions
"nmap <leader>; :call Praise("IdeaVim")<CR>

"function! Praise(name)
"  echo a:name .. " is good"
"endfunction


"vnoremap <leader>s y:%s/<C-r>"//gIc<Left><Left><Left><Left>
"map <leader>ev :e ~/.ideavimrc<CR>
